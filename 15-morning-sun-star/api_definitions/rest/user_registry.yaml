openapi: 3.1.0

info:
  title: User Registry API
  version: 0.1.0
  description: REST API for managing the GHGA user registry
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/
  contact: 
    url: https://www.ghga.de/about-us/contact

servers:
  - url: https://api.server.test/v1

tags: 
  - name: users 
    description: User Data

paths:

  /users:
    post:
      operationId: post_user
      summary: Register a user
      description: Endpoint used to register a new user
      tags:
        - users
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  title: External ID
                  type: string
                issuer:
                  title: Issuer
                  type: string
                name:
                  $ref: "#/components/schemas/FullName"
                email:
                  $ref: "#/components/schemas/EMail"
              required:
                - id
                - issuer
                - name
                - email
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: User was successfully registered.
        "400":
          description: User cannot be registered.
        "409":
          description: User was already registered.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation error in submitted user data.

  /users/{id}:
    get:
      operationId: get_user
      summary: Get user data
      description: Endpoint used to get the user data for a specified user
      tags:
        - users
      parameters:
        - in: path
          name: id
          description: Internal ID or external ID if issuer is given
          schema:
            title: Internal ID
            type: string
          required: true
        - in: query
          name: issuer
          description: Issuer if an external ID is specified
          schema:
            title: Issuer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: Successful Response
        "401":
          description: Not authorized to get user data.
        "404":
          description: The user was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation error in submitted user identification.

    patch:
      operationId: patch_user
      summary: Modify user data
      description: Endpoint used to modify the user data for a specified user
      tags:
        - users
      parameters:
        - in: path
          name: id
          description: Internal ID
          schema:
            title: Internal ID
            type: string
          required: true
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  $ref: "#/components/schemas/FullName"
                test_result:
                  $ref: "#/components/schemas/EMail"
                test_date:
                  $ref: "#/components/schemas/UserStatus"
        required: true
      responses:
        "204":
          description: User data was successfully saved.
        "404":
          description: The user was not found.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation error in submitted user data.

    delete:
      operationId: delete_user
      summary: Delete user
      description: Endpoint used to get the user data for a specified user
      tags:
        - users
      parameters:
        - in: path
          name: id
          description: Internal ID
          schema:
            title: Internal ID
            type: string
          required: true
      responses:
        "204":
          description: User was successfully deleted.
        "422":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/HTTPValidationError"
          description: Validation error in submitted user identification.

components:

  schemas:
  
    User:
      type: object
      title: User
      properties:
        id:
          title: Internal ID
          type: string
        ls_id:
          title: LS AAI ID
          type: string
        status:
          $ref: "#/components/schemas/UserStatus"
        name:
          $ref: "#/components/schemas/FullName"
        email:
          $ref: "#/components/schemas/EMail"
      required:
        - id
        - status
        - name

    UserStatus:
      type: string
      enum:
        - registered
        - activated
        - inactivated
        - deleted
      title: Status
      description: Registration status of the user.

    FullName:
      type: string
      title: Name
      description: Full name of the user.

    EMail:
      type: string
      minLength: 8
      maxLength: 254
      format: email
      title: E-Mail
      description: E-Mail address of the user.

    HTTPValidationError:
      properties:
        detail:
          items:
            $ref: "#/components/schemas/ValidationError"
          title: Detail
          type: array
      title: HTTPValidationError
      type: object

    ValidationError:
      properties:
        loc:
          items:
            type: string
          title: Location
          type: array
        msg:
          title: Message
          type: string
        type:
          title: Error Type
          type: string
      required:
      - loc
      - msg
      - type
      title: ValidationError
      type: object

  securitySchemes:
    
    AuthToken:
      type: apiKey
      in: header
      name: X-GHGA-Token
      description: Internal authentication token for GHGA.

security:
- AuthToken: []
